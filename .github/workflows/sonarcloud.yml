# .github/workflows/build-and-analyze.yml

name: Build, Analyze and Test

on:
  # Corrigido para a branch 'main'
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # Permite que o SonarCloud decore os PRs com resultados da análise
  
jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Necessário para que a análise do Sonar inclua todo o histórico do Git
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Build with Maven and Run Tests
        # -B é para modo batch (não interativo), ideal para CI
        # O 'verify' garante que os testes e a geração do relatório do JaCoCo rodem
        run: mvn -B verify
        
      - name: Analyze with SonarCloud
        # A action do Sonar é executada DEPOIS do build
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Token do SonarCloud, que deve ser configurado nos segredos do repositório
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Token do GitHub é passado automaticamente, necessário para decorar a PR
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Não precisa mais passar os argumentos Dsonar.projectKey e Dsonar.organization
          # A action do Sonar lê isso automaticamente do pom.xml quando integrado com Maven.
          # Isso deixa o workflow mais limpo.
          args: >
            -Dsonar.organization=pedroluizmossi
            -Dsonar.projectKey=pedroluizmossi_caching-x-lib
